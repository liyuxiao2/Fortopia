#BlueJ class context
comment0.target=Runner
comment0.text=\n\ \n\ \n\ \n\ @authors\ Liyu\ Xiao,\ Wendy\ Luo\n\ @version\ January\ 2024\n
comment1.params=level
comment1.target=Runner(int)
comment1.text=\n\ Constructor\ for\ the\ runner\ class\n\ \n\ @param\ int\ level\ -\ the\ level\ the\ runner\ is\ on\n
comment10.params=
comment10.target=void\ animate()
comment11.params=
comment11.target=void\ iFrames()
comment12.params=
comment12.target=boolean\ checkSpikePlayer()
comment12.text=\n\ checks\ if\ the\ player\ is\ hitting\ the\ spike\ or\ not\n\ @param\ checkHitSpike\ \:\ Returns\ true\ if\ the\ player\ is\ dead\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ spike\n
comment13.params=
comment13.target=boolean\ checkHitSpike()
comment13.text=\n\ checks\ if\ the\ player\ is\ hitting\ the\ spike\ or\ not\n\ @param\ checkHitSpike\ \:\ Returns\ true\ if\ the\ player\ is\ hitting\ the\ spike\n
comment14.params=
comment14.target=void\ checkBlockPlayer()
comment14.text=\n\ checks\ is\ the\ player\ is\ getting\ blocked\ by\ anything\n
comment15.params=
comment15.target=boolean\ checkHitBlock()
comment15.text=\n\ checks\ if\ the\ player\ is\ hitting\ the\ block\ or\ not,\ gets\ pushed\ back\ if\ it\ does\ \n\ @param\ checkHitBlock\ \:\ Returns\ true\ if\ the\ player\ is\ hitting\ the\ blocks\n
comment16.params=
comment16.target=void\ checkOnPlatforms()
comment17.params=
comment17.target=boolean\ onPlatforms()
comment17.text=\n\ variable\ to\ aid\ to\ check\ if\ player\ on\ platforms\n\ @param\ onPlatforms\ returns\ true\ if\ the\ player\ is\ on\ the\ platform\n
comment18.params=
comment18.target=boolean\ checkDoorPlayer()
comment19.params=
comment19.target=void\ pushBack()
comment2.params=
comment2.target=void\ act()
comment2.text=\n\ The\ act\ method\ for\ runner\n\ \n\ \n
comment20.params=
comment20.target=void\ endGame()
comment3.params=
comment3.target=void\ checkKey()
comment4.params=
comment4.target=void\ moveR()
comment5.params=
comment5.target=void\ fall()
comment6.params=
comment6.target=void\ checkKeyPress()
comment7.params=elapsedTime
comment7.target=int\ calculateJumpHeight(long)
comment7.text=\n\ Checks\ how\ long\ the\ player\ has\ been\ jumping\n\ \n\ \n\ @param\ elapsedTime\:\ \ How\ long\ the\ user\ has\ been\ holding\ down\ the\ space\ bar\ key\n\ \n\ @return\ int\:\ \ \ \ \ \ \ \ \ returns\ the\ final\ jump\ height\ depending\ on\ how\ long\ the\ user\ has\ been\ holding\ down\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ space\ bar\n
comment8.params=jumpHeight
comment8.target=void\ jump(int)
comment8.text=\n\ \ for\ the\ power\ up\ jump\n\ \ @param\ jumpHeight\ \:\ checks\ how\ high\ the\ power\ jump\ gives\n
comment9.params=
comment9.target=void\ animateR()
numComments=21
